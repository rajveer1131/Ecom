{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nconst CART_INITIAL_STATE = {\n  cartItems: []\n};\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n    case actionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n    case actionTypes.FETCH_MY_CART:\n      return {\n        cartItems: [...action.payload.carts]\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["actionTypes","CART_INITIAL_STATE","cartItems","cartReducer","state","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter","FETCH_MY_CART","carts"],"sources":["/home/r-linux/e-commerce-store-master/e-comerce-frontend/src/redux/reducers/cartReducers.js"],"sourcesContent":["import * as actionTypes from '../constants/cartConstants'\n\nconst CART_INITIAL_STATE = {\n  cartItems: [],\n}\n\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload\n\n      const existItem = state.cartItems.find(x => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x =>\n            x.product === existItem.product ? item : x,\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case actionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload),\n      }\n    case actionTypes.FETCH_MY_CART:\n      return {\n        cartItems: [...action.payload.carts],\n      }\n    default:\n      return state\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,4BAA4B;AAEzD,MAAMC,kBAAkB,GAAG;EACzBC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,kBAAkB,EAAEI,MAAM,KAAK;EACjE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,WAAW,CAACO,WAAW;MAC1B,MAAMC,IAAI,GAAGH,MAAM,CAACI,OAAO;MAE3B,MAAMC,SAAS,GAAGN,KAAK,CAACF,SAAS,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKL,IAAI,CAACK,OAAO,CAAC;MAEvE,IAAIH,SAAS,EAAE;QACb,OAAO;UACL,GAAGN,KAAK;UACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACY,GAAG,CAACF,CAAC,IAC9BA,CAAC,CAACC,OAAO,KAAKH,SAAS,CAACG,OAAO,GAAGL,IAAI,GAAGI,CAC3C;QACF,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGR,KAAK;UACRF,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAS,EAAEM,IAAI;QACtC,CAAC;MACH;IACF,KAAKR,WAAW,CAACe,gBAAgB;MAC/B,OAAO;QACL,GAAGX,KAAK;QACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACc,MAAM,CAACJ,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKR,MAAM,CAACI,OAAO;MACrE,CAAC;IACH,KAAKT,WAAW,CAACiB,aAAa;MAC5B,OAAO;QACLf,SAAS,EAAE,CAAC,GAAGG,MAAM,CAACI,OAAO,CAACS,KAAK;MACrC,CAAC;IACH;MACE,OAAOd,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}